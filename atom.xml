<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-11-10T05:58:21.442Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://example.com/2020/11/10/Centos7.4Gitlab%E6%90%AD%E5%BB%BA/"/>
    <id>http://example.com/2020/11/10/Centos7.4Gitlab%E6%90%AD%E5%BB%BA/</id>
    <published>2020-11-10T05:58:21.442Z</published>
    <updated>2020-11-10T05:58:21.442Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Gitlab服务器搭建步骤"><a href="#Gitlab服务器搭建步骤" class="headerlink" title="Gitlab服务器搭建步骤"></a>Gitlab服务器搭建步骤</h3><h4 id="服务器"><a href="#服务器" class="headerlink" title="服务器:"></a><strong>服务器:</strong></h4><ol><li>教程是基于Centos7.4 64位  双核4GB内存</li><li>服务器购买后记得配置安全组 默认的80端口要添加进去</li></ol><h4 id="域名"><a href="#域名" class="headerlink" title="域名:"></a><strong>域名:</strong></h4><ol><li>域名可以自己申请(需要备案等时间较长,但是域名可以根据自己需要的样式申请 (<a href="http://www.gitxxxx.com/">http://www.gitxxxx.com</a>)</li><li>直接购买</li><li>拿到域名之后记得设置DNS解析</li></ol><h4 id="Gitlab搭建"><a href="#Gitlab搭建" class="headerlink" title="Gitlab搭建:"></a><strong>Gitlab搭建:</strong></h4><p>1.安装依赖</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install curl policycoreutils openssh-server openssh-clients</span><br><span class="line">service sshd restart</span><br><span class="line">yum install postfix</span><br><span class="line">service postfix restart</span><br></pre></td></tr></table></figure><p>2.开始安装</p><blockquote><p>/etc/yum.repos.d下面创建文件gitlab-ce.repo</p><p>gitlab-ce.repo内容如下:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[gitlab-ce]</span><br><span class="line">name&#x3D;Gitlab CE Repository</span><br><span class="line">baseurl&#x3D;https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;gitlab-ce&#x2F;yum&#x2F;el$releasever&#x2F;</span><br><span class="line">gpgcheck&#x3D;0</span><br><span class="line">enabled&#x3D;1</span><br></pre></td></tr></table></figure><blockquote><p>上面的操作是使用镜像提高下载安装的速度，继续回到命令行：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum makecache</span><br><span class="line">yum install gitlab-ce</span><br></pre></td></tr></table></figure><blockquote><p>如果上述安装方法未能成功，可以直接去官网下载rpm安装包</p></blockquote><p><a href="%22https://packages.gitlab.com/gitlab/gitlab-ce?filter=rpms&page=1%22">https://packages.gitlab.com/gitlab/gitlab-ce?filter=rpms&amp;page=1</a></p><blockquote><p>下载后使用 rpm -ivh gitlabe-ce-10…….进行安装</p></blockquote><p>3.配置URL 方法一</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">修改配置文件 /etc/gitlab/gitlab.rb</span><br><span class="line">external_url = <span class="string">&#x27;http://xxx.xxx.xxx.xxx&#x27;</span></span><br><span class="line">默认使用的是<span class="number">80</span>端口如果是其它端口:<span class="string">&#x27;http://xxx.xxx.xxx.xxx:99123’</span></span><br><span class="line"><span class="string">保存退出回到命令行执行gitlab-ctl reconfigure</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">关于邮件:</span></span><br><span class="line"><span class="string">/etc/gitlab/gitlab.rb里面最下面添加配置:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">QQ邮箱配置:</span></span><br><span class="line"><span class="string">gitlab_rails[&#x27;</span>smtp_enable<span class="string">&#x27;] = true</span></span><br><span class="line"><span class="string">gitlab_rails[&#x27;</span>smtp_address<span class="string">&#x27;] = &quot;smtp.qq.com&quot;</span></span><br><span class="line"><span class="string">gitlab_rails[&#x27;</span>smtp_port<span class="string">&#x27;] = 465</span></span><br><span class="line"><span class="string">gitlab_rails[&#x27;</span>smtp_user_name<span class="string">&#x27;] = &quot;xxxxx@qq.com&quot;</span></span><br><span class="line"><span class="string">gitlab_rails[&#x27;</span>smtp_password<span class="string">&#x27;] = &quot;授权码 去邮箱里面账户安全里面开启后获取&quot;</span></span><br><span class="line"><span class="string">gitlab_rails[&#x27;</span>smtp_domain<span class="string">&#x27;] = &quot;smtp.qq.com&quot;</span></span><br><span class="line"><span class="string">gitlab_rails[&#x27;</span>smtp_authentication<span class="string">&#x27;] = &quot;login&quot;</span></span><br><span class="line"><span class="string">gitlab_rails[&#x27;</span>smtp_enable_starttls_auto<span class="string">&#x27;] = true</span></span><br><span class="line"><span class="string">gitlab_rails[&#x27;</span>smtp_tls<span class="string">&#x27;] = true</span></span><br><span class="line"><span class="string">gitlab_rails[&#x27;</span>gitlab_email_from<span class="string">&#x27;] = &#x27;</span>xxxxx@qq.com<span class="string">&#x27;要和上面的邮箱一样</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">163邮箱配置:</span></span><br><span class="line"><span class="string">gitlab_rails[&#x27;</span>smtp_enable<span class="string">&#x27;] = true</span></span><br><span class="line"><span class="string">gitlab_rails[&#x27;</span>smtp_address<span class="string">&#x27;] = &quot;smtp.163.com&quot;</span></span><br><span class="line"><span class="string">gitlab_rails[&#x27;</span>smtp_port<span class="string">&#x27;] = 465</span></span><br><span class="line"><span class="string">gitlab_rails[&#x27;</span>smtp_user_name<span class="string">&#x27;] = &quot;xxxx@163.com&quot; </span></span><br><span class="line"><span class="string">gitlab_rails[&#x27;</span>smtp_password<span class="string">&#x27;] = &quot;授权码&quot;</span></span><br><span class="line"><span class="string">gitlab_rails[&#x27;</span>smtp_domain<span class="string">&#x27;] = &quot;smtp.163.com&quot;</span></span><br><span class="line"><span class="string">gitlab_rails[&#x27;</span>smtp_authentication<span class="string">&#x27;] = &quot;login&quot;</span></span><br><span class="line"><span class="string">gitlab_rails[&#x27;</span>smtp_enable_starttls_auto<span class="string">&#x27;] = true</span></span><br><span class="line"><span class="string">gitlab_rails[&#x27;</span>smtp_tls<span class="string">&#x27;] = true </span></span><br><span class="line"><span class="string">gitlab_rails[&#x27;</span>gitlab_email_from<span class="string">&#x27;] = &quot;xxxx@163.com&quot;要和上面的邮箱一样</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">其它邮箱请参考:</span></span><br><span class="line"><span class="string">https://docs.gitlab.com/omnibus/settings/smtp.html</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">常用命令:</span></span><br><span class="line"><span class="string">gitlab-ctl status 查看状态</span></span><br><span class="line"><span class="string">gitlab-ctl tail查看所有日志</span></span><br><span class="line"><span class="string">gitlab-ctl tail nginx/gitlab_access.log查看nginx访问日志</span></span><br><span class="line"><span class="string">gitlab-ctl tail unicorn跟踪unicorn的状态</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">一些目录结构:</span></span><br><span class="line"><span class="string">主配置文件：/etc/gitlab/gitlab.rb可以自定义一些邮件服务等</span></span><br><span class="line"><span class="string">日志地址：/var/log/gitlab对应各服务的打印日志</span></span><br><span class="line"><span class="string">服务地址：/var/opt/gitlab对应各服务的主目录</span></span><br><span class="line"><span class="string">仓库地址：/var/opt/gitlab/git-data记录项目仓库等提交信息</span></span><br><span class="line"><span class="string">重置配置：gitlab-ctl reconfigure不要乱用，会重置为最原始的配置的</span></span><br><span class="line"><span class="string">重启服务：gitlab-ctl stop/start/restart/uninstall停止、启动、重启、卸载</span></span><br><span class="line"><span class="string">默认安装：postgres、nginx、redis、unicorn ……</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">关于漏洞:</span></span><br><span class="line"><span class="string">kernel security update</span></span><br><span class="line"><span class="string">gnutls security, bug fix, and enhancement update</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">修复命令:</span></span><br><span class="line"><span class="string">yum update kernel</span></span><br><span class="line"><span class="string">kernel-devel</span></span><br><span class="line"><span class="string">kernel-headers</span></span><br><span class="line"><span class="string">reboot</span></span><br><span class="line"><span class="string">修复完返回到浏览器验证该漏洞</span></span><br></pre></td></tr></table></figure><p>方法二</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过阿里云服务器开放端口直接访问</span><br></pre></td></tr></table></figure><p>###使用方法</p><p>Gitlab<br>重置root密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;opt&#x2F;gitlab&#x2F;bin</span><br><span class="line">gitlab-rails console production</span><br><span class="line">u.password&#x3D;&#39;12345678’ &#x2F;&#x2F; 密码</span><br><span class="line">u.password_confirmation&#x3D;&#39;12345678&#39; &#x2F;&#x2F; 确定密码</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ce start</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>关闭服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctlstop unicorn</span><br><span class="line">gitlab-ctlstop sidekiq</span><br><span class="line">gitlab-ctlstop nginx</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Gitlab服务器搭建步骤&quot;&gt;&lt;a href=&quot;#Gitlab服务器搭建步骤&quot; class=&quot;headerlink&quot; title=&quot;Gitlab服务器搭建步骤&quot;&gt;&lt;/a&gt;Gitlab服务器搭建步骤&lt;/h3&gt;&lt;h4 id=&quot;服务器&quot;&gt;&lt;a href=&quot;#服务器&quot; c</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>sss</title>
    <link href="http://example.com/2020/11/10/sss/"/>
    <id>http://example.com/2020/11/10/sss/</id>
    <published>2020-11-10T05:53:36.000Z</published>
    <updated>2020-11-10T05:53:36.435Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2020/11/10/hello-world/"/>
    <id>http://example.com/2020/11/10/hello-world/</id>
    <published>2020-11-10T05:45:33.448Z</published>
    <updated>2020-11-10T05:45:33.448Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>gitlab配置域名访问</title>
    <link href="http://example.com/2020/11/06/gitlab%E9%85%8D%E7%BD%AE%E5%9F%9F%E5%90%8D%E8%AE%BF%E9%97%AE/"/>
    <id>http://example.com/2020/11/06/gitlab%E9%85%8D%E7%BD%AE%E5%9F%9F%E5%90%8D%E8%AE%BF%E9%97%AE/</id>
    <published>2020-11-06T07:55:30.000Z</published>
    <updated>2020-11-10T05:58:21.442Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装Gitlab完成后："><a href="#安装Gitlab完成后：" class="headerlink" title="安装Gitlab完成后："></a>安装Gitlab完成后：</h3><h3 id="安装Gitlab完成后：-1"><a href="#安装Gitlab完成后：-1" class="headerlink" title="安装Gitlab完成后："></a>安装Gitlab完成后：</h3><h3 id="Gitlab默认Nginx80端口"><a href="#Gitlab默认Nginx80端口" class="headerlink" title="Gitlab默认Nginx80端口"></a>Gitlab默认Nginx80端口</h3><h3 id="如果机器未占有80端口，可以直接替换成域名，解析后就可以直接访问"><a href="#如果机器未占有80端口，可以直接替换成域名，解析后就可以直接访问" class="headerlink" title="如果机器未占有80端口，可以直接替换成域名，解析后就可以直接访问"></a>如果机器未占有80端口，可以直接替换成域名，解析后就可以直接访问</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;^external_url&quot; &#x2F;etc&#x2F;gitlab&#x2F;gitlab.rb #查看当前绑定的域名或者IP</span><br><span class="line">vim &#x2F;etc&#x2F;gitlab&#x2F;gitlab.rb   #打开配置文件</span><br><span class="line"># external_url &#39;http:&#x2F;&#x2F;192.168.174.131&#39;  #替换   #修改成域名访问</span><br><span class="line">external_url &#39;http:&#x2F;&#x2F;gitlab.inewmaker.com&#39;  </span><br><span class="line">gitlab-ctl reconfigure   #重新跑一下配置</span><br></pre></td></tr></table></figure><h3 id="如果机器80端口以占有，需要修改gitlab端口"><a href="#如果机器80端口以占有，需要修改gitlab端口" class="headerlink" title="如果机器80端口以占有，需要修改gitlab端口"></a>如果机器80端口以占有，需要修改gitlab端口</h3><pre><code>grep "'listen_port" /etc/gitlab/gitlab.rb   #查看默认端口vim /etc/gitlab/gitlab.rb   #打开配置文件nginx['listen_port'] = 800     #找到取消注释，修改端口gitlab-ctl reconfigure   #重新跑一下配置</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;安装Gitlab完成后：&quot;&gt;&lt;a href=&quot;#安装Gitlab完成后：&quot; class=&quot;headerlink&quot; title=&quot;安装Gitlab完成后：&quot;&gt;&lt;/a&gt;安装Gitlab完成后：&lt;/h3&gt;&lt;h3 id=&quot;安装Gitlab完成后：-1&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Mysql事务的四大特性</title>
    <link href="http://example.com/2020/11/05/Mysql%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%9B%9B%E5%A4%A7%E7%89%B9%E6%80%A7/"/>
    <id>http://example.com/2020/11/05/Mysql%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%9B%9B%E5%A4%A7%E7%89%B9%E6%80%A7/</id>
    <published>2020-11-05T07:20:34.000Z</published>
    <updated>2020-11-10T05:58:21.503Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简介-事务的四大特性ACID"><a href="#简介-事务的四大特性ACID" class="headerlink" title="简介 事务的四大特性ACID"></a>简介 事务的四大特性ACID</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">* 原子性Atomicity：</span><br><span class="line">        一个事务必须被事务不可分割的最小工作单元，整个操作要么全部成功，要么全部失败，一般就是通过commit和rollback来控制</span><br><span class="line">* 一致性Consistency:</span><br><span class="line">        数据库总能从一个一致性的状态转换到另一个一致性的状态，比如小滴课堂下单支付成功后，开通视频播放权限，只要有任何一方发生异常就不会成功提交事务</span><br><span class="line">* 隔离性Isolation:</span><br><span class="line">        一个事务相对于另一个事务是隔离的，一个事务所做的修改是在最终提交以前，对其他事务是不可见的       </span><br><span class="line">* 持久性Durability:</span><br><span class="line">        一旦事务提交，则其所做的修改就会永久保存到数据库中。此时即使系统崩溃，修改的数据也不会丢失</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;简介-事务的四大特性ACID&quot;&gt;&lt;a href=&quot;#简介-事务的四大特性ACID&quot; class=&quot;headerlink&quot; title=&quot;简介 事务的四大特性ACID&quot;&gt;&lt;/a&gt;简介 事务的四大特性ACID&lt;/h3&gt;&lt;figure class=&quot;highlight </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Mysql的存储引擎</title>
    <link href="http://example.com/2020/11/05/Mysql%E7%9A%84%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/"/>
    <id>http://example.com/2020/11/05/Mysql%E7%9A%84%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/</id>
    <published>2020-11-05T07:20:34.000Z</published>
    <updated>2020-11-10T05:58:21.488Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简介-Mysql常见的存储引擎，新版Mysql默认是哪个"><a href="#简介-Mysql常见的存储引擎，新版Mysql默认是哪个" class="headerlink" title="简介: Mysql常见的存储引擎，新版Mysql默认是哪个"></a>简介: Mysql常见的存储引擎，新版Mysql默认是哪个</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">常见的有多类，InnoDB、MyISAM、MEMORY、MERGE、ARCHIVE、CSV等</span><br><span class="line">一般比较常用的有InnoDB、MyISAM</span><br><span class="line">MySQL 5.5以上的版本默认是InnoDB，5.5之前默认存储引擎是MyISAM</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;简介-Mysql常见的存储引擎，新版Mysql默认是哪个&quot;&gt;&lt;a href=&quot;#简介-Mysql常见的存储引擎，新版Mysql默认是哪个&quot; class=&quot;headerlink&quot; title=&quot;简介: Mysql常见的存储引擎，新版Mysql默认是哪个&quot;&gt;&lt;/a&gt;简</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Mysql数据库索引</title>
    <link href="http://example.com/2020/11/05/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B4%A2%E5%BC%95/"/>
    <id>http://example.com/2020/11/05/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B4%A2%E5%BC%95/</id>
    <published>2020-11-05T07:20:34.000Z</published>
    <updated>2020-11-10T05:58:21.450Z</updated>
    
    <content type="html"><![CDATA[<table>    <tr>        <th >索引名称</th>        <th>特点</th>        <th>创建语句</th>    </tr>    <tr>        <td>普通索引</td>        <td>最基本的索引,仅加速查询</td>        <td>REATE INDEX idx_name ON table_name(filed_name)</td>    </tr>    <tr>        <td>唯一索引</td>        <td>加速查询，列值唯一，允许为空; 组合索引则列值的组合必须唯一</td>        <td>CREATE UNIQUE INDEX idx_name ON table_name(filed_name_1,filed_name_2)</td>    </tr>    <tr>            <td>主键索引</td>            <td>加速查询，列值唯一,一个表只有1个，不允许有空值</td>            <td>ALTER TABLE table_name ADD PRIMARY KEY ( filed_name )</td>    </tr>    <tr>         <td>组合索引</td>         <td>加速查询，多条件组合查询</td>         <td>CREATE INDEX idx_name ON table_name(filed_name_1,filed_name_2);</td>    </tr>     <tr>           <td>覆盖索引</td>           <td>索引包含所需要的值，不需要“回表”查询，               比如查询 两个字段，刚好是 组合索引 的两个字段</td>           <td></td>     </tr>      <tr>           <td>全文索引</td>           <td>对内容进行分词搜索，仅可用于Myisam， 更多用ElasticSearch做搜索</td>            <td>ALTER TABLE table_name ADD FULLTEXT ( filed_name )</td>      </tr>    </table>]]></content>
    
    
      
      
    <summary type="html">&lt;table&gt;
    &lt;tr&gt;
        &lt;th &gt;索引名称&lt;/th&gt;
        &lt;th&gt;特点&lt;/th&gt;
        &lt;th&gt;创建语句&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;普通索引&lt;/td&gt;
        &lt;td&gt;最基本的索</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>gitbook安装</title>
    <link href="http://example.com/2020/11/05/gitbook%E5%AE%89%E8%A3%85/"/>
    <id>http://example.com/2020/11/05/gitbook%E5%AE%89%E8%A3%85/</id>
    <published>2020-11-05T07:20:34.000Z</published>
    <updated>2020-11-10T05:58:21.442Z</updated>
    
    <content type="html"><![CDATA[<p>###通过NPM安装<br>安装 GitBook 的最好办法是通过 NPM。在终端提示符下，只需运行以下命令即可安装 GitBook：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install gitbook-cli -g</span><br></pre></td></tr></table></figure><p>gitbook-cli是 GitBook 的一个命令行工具。它将自动安装所需版本的 GitBook 来构建一本书.<br>执行下面的命令，查看 GitBook 版本，以验证安装成功。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook -V</span><br></pre></td></tr></table></figure><p>###初始化<br>GitBook可以设置一个样板书：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook init <span class="comment">// 安装时间有时候比较长 请耐心等待</span></span><br></pre></td></tr></table></figure><p>如果您希望将书籍创建到一个新目录中，可以通过运行 gitbook init ./directory 这样做</p><p>###构建<br>使用下面的命令，会在项目的目录下生成一个 _book 目录，里面的内容为静态站点的资源文件：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook build</span><br></pre></td></tr></table></figure><p>###Debugging<br>您可以使用选项 –log=debug 和 –debug 来获取更好的错误消息（使用堆栈跟踪）。例如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook build ./ --log=debug --debug</span><br></pre></td></tr></table></figure><p>###启动服务<br>使用下列命令会运行一个 web 服务, 通过 <a href="http://localhost:4000/">http://localhost:4000/</a> 可以预览书籍</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook serve</span><br></pre></td></tr></table></figure><p>###GitBook 命令<br>列出 gitbook 所有的命令</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook help</span><br></pre></td></tr></table></figure><p>生成静态网页</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook build</span><br></pre></td></tr></table></figure><p>生成静态网页并运行服务器</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook serve</span><br></pre></td></tr></table></figure><p>生成时指定gitbook的版本, 本地没有会先下载</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook build --gitbook=<span class="number">2.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><p>列出本地所有的gitbook版本</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook ls</span><br></pre></td></tr></table></figure><p>列出远程可用的gitbook版本</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook ls-remote</span><br></pre></td></tr></table></figure><p>安装对应的gitbook版本</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook fetch 标签/版本号</span><br></pre></td></tr></table></figure><p>更新到gitbook的最新版本</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook update</span><br></pre></td></tr></table></figure><p>卸载对应的gitbook版本</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook uninstall <span class="number">2.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><p>指定log的级别</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook build --log=debug</span><br></pre></td></tr></table></figure><p>输出错误信息</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook builid --debug</span><br></pre></td></tr></table></figure><p>###官方资源<br><a href="%22https://www.jianshu.com/p/191d1e21f7ed%22">Markdown基本语法</a><br><a href="%22https://github.com/GitbookIO/gitbook%22">Gitbook Github</a></p><p><a href="%22https://www.gitbook.com%22">Gitbook 官网</a></p><p><a href="%22https://toolchain.gitbook.com/%22">Gitbook Toolchain 文档</a></p><p><a href="%22https://docs.gitbook.com/%22">Gitbook 帮助中心</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;###通过NPM安装&lt;br&gt;安装 GitBook 的最好办法是通过 NPM。在终端提示符下，只需运行以下命令即可安装 GitBook：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>私有npm搭建教程</title>
    <link href="http://example.com/2020/11/05/%E7%A7%81%E6%9C%89npm%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
    <id>http://example.com/2020/11/05/%E7%A7%81%E6%9C%89npm%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</id>
    <published>2020-11-05T07:20:34.000Z</published>
    <updated>2020-11-10T05:58:21.450Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装与启动"><a href="#安装与启动" class="headerlink" title="安装与启动"></a>安装与启动</h2><h4 id="1-全局安装verdaccio"><a href="#1-全局安装verdaccio" class="headerlink" title="1. 全局安装verdaccio"></a>1. 全局安装verdaccio</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// 加上--unsafe-perm选项是为了防止gyp ERR! permission denied权限问题报错</span><br><span class="line">npm install --global verdaccio --unsafe-perm</span><br><span class="line">// 对于 verdaccio@4.0.0-alpha.x 或 verdaccio@4.x版本， Node 8.x (LTS <span class="string">&quot;Carbon&quot;</span>) 是最低支持版本, 建议安装nvm进行node版的切换。</span><br></pre></td></tr></table></figure><h4 id="2-全局安装pm2"><a href="#2-全局安装pm2" class="headerlink" title="2. 全局安装pm2"></a>2. 全局安装pm2</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --global pm2</span><br></pre></td></tr></table></figure><blockquote><p>如果安装失败，可以尝试 npm cache clean -f 后重新安装。</p></blockquote><h4 id="3-启动verdaccio"><a href="#3-启动verdaccio" class="headerlink" title="3. 启动verdaccio"></a>3. 启动verdaccio</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pm2 start verdaccio</span><br><span class="line">pm2 <span class="built_in">log</span> verdaccio // 或者使用 pm2 <span class="built_in">log</span> 对应的id</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 表示启动成功, 打开 http://localhost:4873 可以看到页面。</span><br><span class="line">0|verdacci |  warn --- config file  - /Users/jinbiao/.config/verdaccio/config.yaml</span><br><span class="line">0|verdacci |  warn --- Plugin successfully loaded: verdaccio-htpasswd</span><br><span class="line">0|verdacci |  warn --- Plugin successfully loaded: verdaccio-audit</span><br><span class="line">0|verdacci |  warn --- http address - http://localhost:4873/ - verdaccio/4.1.0</span><br></pre></td></tr></table></figure><h4 id="4-配置config-yaml"><a href="#4-配置config-yaml" class="headerlink" title="4. 配置config.yaml"></a>4. 配置config.yaml</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">logs:</span><br><span class="line">  - &#123; <span class="built_in">type</span>: stdout, format: pretty, level: http &#125;</span><br><span class="line">  <span class="comment">#- &#123;type: file, path: verdaccio.log, level: info&#125;</span></span><br><span class="line">listen: 0.0.0.0:4873 // 在文件最后，添加listen这一行 表示可以通过外网访问</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 restart verdaccio // 或者使用 pm2 restart 对应的id</span><br></pre></td></tr></table></figure><blockquote></blockquote><h2 id="verdaccio配置"><a href="#verdaccio配置" class="headerlink" title="verdaccio配置"></a>verdaccio配置</h2><h4 id="1-默认配置如下"><a href="#1-默认配置如下" class="headerlink" title="1.默认配置如下"></a>1.默认配置如下</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># #号后面是注释</span></span><br><span class="line"><span class="comment"># 所有包的缓存目录</span></span><br><span class="line">storage: ./storage</span><br><span class="line"><span class="comment"># 插件目录</span></span><br><span class="line">plugins: ./plugins</span><br><span class="line"></span><br><span class="line"><span class="comment">#开启web 服务,能够通过web 访问</span></span><br><span class="line">web:</span><br><span class="line">  <span class="comment"># WebUI is enabled as default, if you want disable it, just uncomment this line</span></span><br><span class="line">  <span class="comment">#enable: false</span></span><br><span class="line">  title: Verdaccio</span><br><span class="line"><span class="comment">#验证信息</span></span><br><span class="line">auth:</span><br><span class="line">  htpasswd:</span><br><span class="line">    <span class="comment">#  用户信息存储目录</span></span><br><span class="line">    file: ./htpasswd</span><br><span class="line">    <span class="comment"># Maximum amount of users allowed to register, defaults to &quot;+inf&quot;.</span></span><br><span class="line">    <span class="comment"># You can set this to -1 to disable registration.</span></span><br><span class="line">    <span class="comment">#max_users: 1000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a list of other known repositories we can talk to</span></span><br><span class="line"><span class="comment">#公有仓库配置</span></span><br><span class="line">uplinks:</span><br><span class="line">  npmjs:</span><br><span class="line">    url: https://registry.npmjs.org/</span><br><span class="line"></span><br><span class="line">packages:</span><br><span class="line">  <span class="string">&#x27;@*/*&#x27;</span>:</span><br><span class="line">    <span class="comment"># scoped packages</span></span><br><span class="line">    access: <span class="variable">$all</span></span><br><span class="line">    publish: <span class="variable">$authenticated</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#代理 表示没有的仓库会去这个npmjs 里面去找 ,</span></span><br><span class="line">    <span class="comment">#npmjs 又指向  https://registry.npmjs.org/ ,就是上面的 uplinks 配置</span></span><br><span class="line">    proxy: npmjs</span><br><span class="line"></span><br><span class="line">  <span class="string">&#x27;**&#x27;</span>:</span><br><span class="line">    <span class="comment"># 三种身份,所有人,匿名用户,认证(登陆)用户</span></span><br><span class="line">    <span class="comment"># &quot;$all&quot;, &quot;$anonymous&quot;, &quot;$authenticated&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#是否可访问所需要的权限</span></span><br><span class="line">    access: <span class="variable">$all</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#发布package 的权限</span></span><br><span class="line">    publish: <span class="variable">$authenticated</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果package 不存在,就向代理的上游服务发起请求</span></span><br><span class="line">    proxy: npmjs</span><br><span class="line"></span><br><span class="line"><span class="comment"># To use `npm audit` uncomment the following section</span></span><br><span class="line">middlewares:</span><br><span class="line">  audit:</span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line"><span class="comment"># 监听的端口，IP,重点,不配置这个,只能本机能访问</span></span><br><span class="line">listen: 0.0.0.0:4873</span><br><span class="line"><span class="comment"># log settings</span></span><br><span class="line">logs:</span><br><span class="line">  - &#123;<span class="built_in">type</span>: stdout, format: pretty, level: http&#125;</span><br><span class="line">  <span class="comment">#- &#123;type: file, path: verdaccio.log, level: info&#125;</span></span><br></pre></td></tr></table></figure><h4 id="2-缓存，上游，及更新原理"><a href="#2-缓存，上游，及更新原理" class="headerlink" title="2.缓存，上游，及更新原理"></a>2.缓存，上游，及更新原理</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">uplinks:</span><br><span class="line">  someRegisry:</span><br><span class="line">    url: http://172.18.128.218:4873/</span><br><span class="line"></span><br><span class="line">packages:</span><br><span class="line">  <span class="string">&#x27;@*/*&#x27;</span>:</span><br><span class="line">    <span class="comment"># scoped packages</span></span><br><span class="line">    access: <span class="variable">$all</span></span><br><span class="line">    publish: <span class="variable">$authenticated</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#代理 表示没有的仓库会去这个 someRegisry 里面去找 ,</span></span><br><span class="line">    <span class="comment">#someRegisry 又指向  http://172.18.128.218:4873/ ,就是上面的 uplinks 配置</span></span><br><span class="line">    proxy: someRegisry</span><br><span class="line"></span><br><span class="line">  <span class="string">&#x27;**&#x27;</span>:</span><br><span class="line">    <span class="comment"># 三种身份,所有人,匿名用户,认证(登陆)用户</span></span><br><span class="line">    <span class="comment"># &quot;$all&quot;, &quot;$anonymous&quot;, &quot;$authenticated&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#是否可访问所需要的权限</span></span><br><span class="line">    access: <span class="variable">$all</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#发布package 的权限</span></span><br><span class="line">    publish: <span class="variable">$authenticated</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果package 不存在,就向代理的上游服务发起请求</span></span><br><span class="line">    proxy: npmjs</span><br></pre></td></tr></table></figure><p><img src="../img/1.png" alt="image"></p><blockquote><p>上图表示verdaccio先去上游地址请求到了包，然后把包返回给客户端，并且缓存了.tgz压缩包。</p></blockquote><p><img src="../img/2.png" alt="image"></p><blockquote><p>存到了 ~/.config/verdaccio/storage 之中</p></blockquote><p><img src="../img/3.png" alt="image"></p><blockquote><p>上图表示第二次还是请求这个模块的时候，verdaccio会去上游查找，并且和本地缓存对比，发现没有区别，所有直接从缓存返回。</p></blockquote><p><img src="../img/4.png" alt="image"></p><p><img src="../img/5.png" alt="image"></p><blockquote><p>上图表示，上游模块发生了更新，所以继续到上游地址请求包，然后把包返回给客户端，并且缓存了.tgz压缩包。</p></blockquote><p><a href="https://verdaccio.org/docs/zh-CN/installation">verdaccio官方文档</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装与启动&quot;&gt;&lt;a href=&quot;#安装与启动&quot; class=&quot;headerlink&quot; title=&quot;安装与启动&quot;&gt;&lt;/a&gt;安装与启动&lt;/h2&gt;&lt;h4 id=&quot;1-全局安装verdaccio&quot;&gt;&lt;a href=&quot;#1-全局安装verdaccio&quot; class=&quot;he</summary>
      
    
    
    
    
  </entry>
  
</feed>
